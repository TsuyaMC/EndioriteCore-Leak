<?php

namespace endiorite\items;

use customiesdevs\customies\item\CreativeInventoryInfo;
use customiesdevs\customies\item\ItemComponents;
use customiesdevs\customies\item\ItemComponentsTrait;
use endiorite\Main;
use pocketmine\item\Item;
use pocketmine\item\ItemIdentifier;
use pocketmine\item\ItemUseResult;
use pocketmine\math\Vector3;
use pocketmine\nbt\tag\CompoundTag;
use pocketmine\player\Player;

class UnclaimFinder extends Item implements ItemComponents {

    use ItemComponentsTrait;

    public function __construct(ItemIdentifier $identifier, string $name = "Unknown") {
        parent::__construct($identifier, $name);
        $this->initComponent("unclaim_finder", 1, new CreativeInventoryInfo(CreativeInventoryInfo::CATEGORY_ITEMS));
        $this->addProperty("hand_equipped", true);
        $this->addComponent("minecraft:render_offsets", CompoundTag::create()
            ->setTag("main_hand", Main::$instance->utils->setupRenderOffSets(16, 16, true))
            ->setTag("off_hand", Main::$instance->utils->setupRenderOffSets(16, 16, true))
        );
    }

    public function onClickAir(Player $player, Vector3 $directionVector): ItemUseResult {
        $item = $player->getInventory()->getItemInHand();
        if($item instanceof UnclaimFinder) {
            $count = 0;
            $x = $player->getPosition()->getFloorX() >> 4;
            $z = $player->getPosition()->getFloorZ() >> 4;
            foreach($player->getWorld()->getChunk($x, $z)->getTiles() as $tile) {
                $count++;
            }
            $player->sendPopup("Â§d{$count} %%");
        }
        return parent::onClickAir($player, $directionVector); // TODO: Change the autogenerated stub
    }

}